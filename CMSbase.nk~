#! /Applications/Nuke14.0v2/Nuke14.0v2.app/Contents/MacOS/libnuke-14.0.2.dylib -nx
version 14.0 v2
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="37" w="1470" h="891" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="807" stretch="1"/>
            <splitter orientation="2">
                <split size="572"/>
                <dock id="" activePageId="Viewer.1" focus="true">
                    <page id="Viewer.1"/>
                </dock>
                <split size="299"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="Scenegraph.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMSbase.nk
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 monitorOutLUT rec709
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
Constant {
 inputs 0
 channels rgb
 name Constant6
 xpos 497
 ypos -132
 postage_stamp false
}
Reformat {
 format "1024 1024 0 0 1024 1024 1 square_1K"
 resize distort
 name Reformat28
 xpos 497
 ypos -106
}
Expression {
 temp_name0 X
 temp_expr0 (1-(abs(cx-1)+abs(cy-1))/2)*Max
 temp_name1 Y
 temp_expr1 (1-(x/width))*MaxG
 temp_name2 Z
 temp_expr2 (1-(y/height))*MaxB
 temp_name3 M
 temp_expr3 "(   (1-(abs(cx+1)+abs(cy+1))/2)   ) >0?0:1"
 expr0 "isnan(    (maxSteps+maxStepsR) >= 1 ? (cl == 1 ? (clamp(X) * M) : X*M) : ((floor(   (cl == 1 ? (clamp(X) * M) : X*M)   * (steps/Max) ))/(steps/Max))    ) ? 0 : (    (maxSteps+maxStepsR) >= 1 ? (cl == 1 ? (clamp(X) * M) : X*M) : ((floor(   (cl == 1 ? (clamp(X) * M) : X*M)   * (steps/Max) ))/(steps/Max))    ) "
 expr1 "isnan(    (maxSteps+maxStepsG) >= 1 ? (cl == 1 ? (clamp(Y) * M) : Y*M) : ((floor(   (cl == 1 ? (clamp(Y) * M) : Y*M)   * (steps/MaxG) ))/(steps/MaxG))    ) ? 0 : (    (maxSteps+maxStepsG) >= 1 ? (cl == 1 ? (clamp(Y) * M) : Y*M) : ((floor(   (cl == 1 ? (clamp(Y) * M) : Y*M)   * (steps/MaxG) ))/(steps/MaxG))    )"
 expr2 "isnan(    (maxSteps+maxStepsB) >= 1 ? (cl == 1 ? (clamp(Z) * M) : Z*M) : ((floor(   (cl == 1 ? (clamp(Z) * M) : Z*M)   * (steps/MaxB) ))/(steps/MaxB))    ) ? 0 : (    (maxSteps+maxStepsB) >= 1 ? (cl == 1 ? (clamp(Z) * M) : Z*M) : ((floor(   (cl == 1 ? (clamp(Z) * M) : Z*M)   * (steps/MaxB) ))/(steps/MaxB))    )"
 expr3 M
 name IDENTITY_PLANE3
 xpos 497
 ypos -59
 addUserKnob {20 User}
 addUserKnob {6 cl +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {3 steps}
 steps 64
 addUserKnob {6 maxSteps l "max ALL    ||  " -STARTLINE}
 maxSteps true
 addUserKnob {6 maxStepsR l "max R" -STARTLINE}
 addUserKnob {6 maxStepsG l "max G" -STARTLINE}
 addUserKnob {6 maxStepsB l "max B" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {14 third R 0 100}
 third {{width/3} {height/3}}
 addUserKnob {14 Nthird R 0 100}
 Nthird {{1/(width/third.w)} {1/(height/third.h)}}
 addUserKnob {26 ""}
 addUserKnob {7 Max l MaxR R -4 4}
 Max 3
 addUserKnob {7 MaxG R -4 4}
 MaxG 3
 addUserKnob {7 MaxB R -4 4}
 MaxB 3
}
CMSTestPattern {
 inputs 0
 cube_size 2
 name CMSTestPattern2
 xpos 677
 ypos -217
}
set N1a861800 [stack 0]
Reformat {
 type "to box"
 box_width 30
 box_height 30
 box_fixed true
 filter impulse
 name Reformat1
 xpos 677
 ypos -139
}
Dot {
 name Dot2
 xpos 711
 ypos -99
}
set N1ec3ea00 [stack 0]
push $N1ec3ea00
Colorspace {
 colorspace_in sRGB
 colorspace_out YCbCr
 name Colorspace2
 xpos 677
 ypos -73
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 white -1 -1 rgba.alpha 0 3 rgba.green 0 1 rgba.red 0 0 black -1 -1 rgba.blue 0 2 rgba.blue 0 2 rgba.green 0 1"
 name Shuffle3
 xpos 677
 ypos -40
}
set Nbd8ace00 [stack 0]
BlinkScript {
 inputs 2
 recompileCount 1
 ProgramGroup 1
 KernelDescription "2 \"plot_RGB\" iterate pixelWise 6fd64ccaf4f15596e4efb5ec04c8bcfff3c13ef0a19e6ab8c9e875cf792bf362 3 \"src\" Read Random \"col\" Read Random \"dst\" Write Random 3 \"global_scale\" Float 1 AACAPw== \"weight\" Float 1 AACAPw== \"offset\" Float 2 AAAAAAAAAAA= 3 \"global_scale\" 1 1 \"weight\" 1 1 \"offset\" 2 1 1 \"yscale\" Float 1 1 AAAAAA=="
 kernelSource "// TODO: normalize/clamp/compress source input\n// CIEYxy and YCbCr matrix transforms internally\n// Plots graphics\n\n\n\nkernel plot_RGB : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float global_scale; // This value in scene linear maps to the top of the frame\n    float weight;\n    float2 offset;\n\n  local:\n    float yscale;\n\n\n  void define() \{\n    defineParam(global_scale,\"global_scale\",        1.0f);\n    defineParam(weight,\"weight\",                    1.0f);\n    defineParam(offset,\"offset\",        float2(0.0f,0.0f));\n  \}\n\n  void init() \{\n    yscale = dst.bounds.height() / global_scale;\n  \}\n\n  void write(float posx, float posy, int channel, float color, float weight=1.0f) \{\n    if ( dst.bounds.inside(posx, posy)) \{\n      float dst_sample = dst(0.0f, 0.0f, channel) + (color*weight);\n      dst(posx, posy, channel) = dst_sample;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float4 pix_position       = src(pos.x, pos.y);\n    float4 pix_colour         = col(pos.x, pos.y);\n\n    float processed_X = pix_position.x;\n    float processed_Y = pix_position.y;\n\n    int _posX = (processed_X * (dst.bounds.width()  * global_scale) + offset\[0] );\n    int _posY = (processed_Y * (dst.bounds.height() * global_scale) + offset\[1] );\n\n    write(_posX, _posY, 0, pix_colour.x, weight);\n    write(_posX, _posY, 1, pix_colour.y, weight);\n    write(_posX, _posY, 2, pix_colour.z, weight);\n    write(_posX, _posY, 3, pix_colour.w, weight);\n  \}\n\};"
 rebuild ""
 rebuild_finalise ""
 name BlinkScript2
 xpos 903
 ypos -44
}
Crop {
 box {0 0 3 3}
 name Crop3
 xpos 1089
 ypos 68
}
Transform {
 translate {6 0}
 center {1.5 1.5}
 filter impulse
 name Transform2
 xpos 1089
 ypos 92
}
push $Nbd8ace00
Crop {
 box {0 0 3 3}
 name Crop2
 xpos 1015
 ypos 1
}
Transform {
 translate {3 0}
 center {1.5 1.5}
 filter impulse
 name Transform1
 xpos 1015
 ypos 25
}
push $N1a861800
Reformat {
 type "to box"
 box_width 3
 box_height 3
 box_fixed true
 filter impulse
 black_outside true
 name Reformat2
 xpos 865
 ypos -148
}
Crop {
 box {0 0 3 3}
 name Crop1
 xpos 865
 ypos -124
}
set N1c248200 [stack 0]
Constant {
 inputs 0
 channels rgb
 name Constant1
 xpos 1139
 ypos -169
}
Reformat {
 type "to box"
 box_width 9
 box_height 3
 box_fixed true
 name Reformat3
 xpos 1139
 ypos -97
}
Merge2 {
 inputs 2
 name Merge1
 xpos 1031
 ypos -84
}
Merge2 {
 inputs 2
 name Merge2
 xpos 1181
 ypos -20
}
Merge2 {
 inputs 2
 name Merge3
 xpos 1230
 ypos 86
}
Grade {
 inputs 0
 whitepoint 12
 black 27.9
 name Grade1
 xpos 654
 ypos 21
}
CMSTestPattern {
 inputs 0
 cube_size 8
 name CMSTestPattern1
 xpos 195
 ypos -119
}
set N3acd7000 [stack 0]
Dot {
 name Dot1
 xpos 229
 ypos -18
}
set N3c411a00 [stack 0]
Colorspace {
 colorspace_in sRGB
 colorspace_out YCbCr
 name Colorspace1
 xpos 195
 ypos 43
}
set N1c2f4200 [stack 0]
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.alpha 0 3 rgba.alpha 0 3 rgba.blue 0 2 rgba.red 0 0 rgba.red 0 0 rgba.blue 0 2"
 name Shuffle2
 xpos -47
 ypos 69
}
push $N3acd7000
ContactSheet {
 inputs 2
 rows 1
 columns 2
 name ContactSheet1
 xpos 90
 ypos -5
}
push $N1c2f4200
Colorspace {
 colorspace_in sRGB
 name Colorspace3
 xpos 195
 ypos 81
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 name Shuffle1
 xpos 195
 ypos 116
 disable true
}
set N1c7c4000 [stack 0]
Dot {
 name Dot3
 xpos 107
 ypos 152
}
push $N1c7c4000
Expression {
 expr0 r*width
 expr1 g*height
 name Expression1
 xpos 311
 ypos 195
}
Read {
 inputs 0
 file_type jpeg
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_512.jpeg
 format "512 512 0 0 512 512 1 square_512"
 origset true
 name Read1
 xpos 744
 ypos 263
}
push $N3c411a00
push $N1c2f4200
STMap {
 inputs 2
 channels rgb
 uv rgb
 name STMap1
 xpos 489
 ypos 15
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 white -1 -1 rgba.alpha 0 3 rgba.green 0 1 rgba.red 0 0 rgba.blue 0 2 rgba.green 0 1 black -1 -1 rgba.blue 0 2"
 name Shuffle5
 xpos 532
 ypos 182
}
Read {
 inputs 0
 file_type jpeg
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_512.jpeg
 format "512 512 0 0 512 512 1 square_512"
 origset true
 colorspace linear
 name Read2
 xpos -486
 ypos 28
}
set N1e91d400 [stack 0]
Dot {
 name Dot4
 xpos -369
 ypos 260
}
push $N1e91d400
Colorspace {
 colorspace_in sRGB
 name Colorspace4
 xpos -297
 ypos 100
}
Colorspace {
 colorspace_in sRGB
 colorspace_out YCbCr
 name Colorspace5
 xpos -287
 ypos 163
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.green 0 1 rgba.green 0 1 rgba.alpha 0 3 rgba.alpha 0 3 rgba.red 0 0 rgba.blue 0 2 rgba.blue 0 2 rgba.red 0 0"
 name Shuffle4
 xpos -287
 ypos 216
}
BlinkScript {
 inputs 2
 recompileCount 1
 ProgramGroup 1
 KernelDescription "2 \"plot_RGB\" iterate pixelWise 6fd64ccaf4f15596e4efb5ec04c8bcfff3c13ef0a19e6ab8c9e875cf792bf362 3 \"src\" Read Random \"col\" Read Random \"dst\" Write Random 3 \"global_scale\" Float 1 AACAPw== \"weight\" Float 1 AACAPw== \"offset\" Float 2 AAAAAAAAAAA= 3 \"global_scale\" 1 1 \"weight\" 1 1 \"offset\" 2 1 1 \"yscale\" Float 1 1 AAAAAA=="
 kernelSource "// TODO: normalize/clamp/compress source input\n// CIEYxy and YCbCr matrix transforms internally\n// Plots graphics\n\n\n\nkernel plot_RGB : public ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src;\n  Image<eRead, eAccessRandom, eEdgeClamped> col;\n  Image<eWrite, eAccessRandom> dst;\n\n  param:\n    float global_scale; // This value in scene linear maps to the top of the frame\n    float weight;\n    float2 offset;\n\n  local:\n    float yscale;\n\n\n  void define() \{\n    defineParam(global_scale,\"global_scale\",        1.0f);\n    defineParam(weight,\"weight\",                    1.0f);\n    defineParam(offset,\"offset\",        float2(0.0f,0.0f));\n  \}\n\n  void init() \{\n    yscale = dst.bounds.height() / global_scale;\n  \}\n\n  void write(float posx, float posy, int channel, float color, float weight=1.0f) \{\n    if ( dst.bounds.inside(posx, posy)) \{\n      float dst_sample = dst(0.0f, 0.0f, channel) + (color*weight);\n      dst(posx, posy, channel) = dst_sample;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float4 pix_position       = src(pos.x, pos.y);\n    float4 pix_colour         = col(pos.x, pos.y);\n\n    float processed_X = pix_position.x;\n    float processed_Y = pix_position.y;\n\n    int _posX = (processed_X * (dst.bounds.width()  * global_scale) + offset\[0] );\n    int _posY = (processed_Y * (dst.bounds.height() * global_scale) + offset\[1] );\n\n    write(_posX, _posY, 0, pix_colour.x, weight);\n    write(_posX, _posY, 1, pix_colour.y, weight);\n    write(_posX, _posY, 2, pix_colour.z, weight);\n    write(_posX, _posY, 3, pix_colour.w, weight);\n  \}\n\};"
 rebuild ""
 rebuild_finalise ""
 name BlinkScript1
 xpos -268
 ypos 296
}
Read {
 inputs 0
 file_type exr
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_512.exr
 format "512 512 0 0 512 512 1 square_512"
 origset true
 colorspace linear
 name Read4
 xpos -722
 ypos 83
}
set Nebb92000 [stack 0]
PositionToPoints2 {
 P_channel rgb
 detail 1
 name PositionToPoints1
 xpos -836
 ypos 238
}
push $Nebb92000
Read {
 inputs 0
 file_type jpeg
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_512.jpeg
 format "512 512 0 0 512 512 1 square_512"
 origset true
 colorspace linear
 name Read3
 xpos -877
 ypos 53
}
Merge2 {
 inputs 2
 operation difference
 name Merge4
 xpos -859
 ypos 186
}
push $N3acd7000
Reformat {
 format "512 512 0 0 512 512 1 square_512"
 filter impulse
 name Reformat4
 xpos 434
 ypos 196
}
Colorspace {
 colorspace_in sRGB
 name Colorspace6
 xpos 415
 ypos 240
}
Write {
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_512.jpeg
 file_type jpeg
 _jpeg_quality 1
 _jpeg_sub_sampling 4:4:4
 checkHashOnRead false
 version 12
 name Write2
 xpos 394
 ypos 289
}
push $Nebb92000
push $N1c248200
Write {
 file /Users/guillemramisadesoto/Documents/XCODE/OpenCV_DEV/CMS_3x3.jpeg
 file_type jpeg
 _jpeg_quality 1
 _jpeg_sub_sampling 4:4:4
 checkHashOnRead false
 version 2
 name Write1
 selected true
 xpos 865
 ypos -107
}
Viewer {
 inputs 2
 frame 1
 frame_range 1-100
 colour_sample_bbox {-0.3333333433 -1 0.3333333433 -0.3333333433}
 samplepoints {{-0.3333333433 -0.3333333433}
   }
 monitorOutOutputTransform rec709
 name Viewer1
 xpos -40
 ypos -9
}
